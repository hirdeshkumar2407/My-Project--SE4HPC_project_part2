name: C++ My_project_SE4HPC_part1&2 CICD Pipeline

on: [push, pull_request]

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive  # Initialize and update submodules

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Update APT and install dependencies
        run: |
          sudo apt update
          sudo apt install -y mpich libmpich-dev wget openssh-client sshpass

      - name: Set up MPI environment variables
        run: |
          echo 'export PATH=/usr/lib/x86_64-linux-gnu/mpich/bin:$PATH' >> ~/.bashrc
          echo 'export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/mpich/lib:$LD_LIBRARY_PATH' >> ~/.bashrc
          source ~/.bashrc

      - name: Create and navigate to build directory
        run: mkdir build

      - name: Send files for verification
        run: cp -av matrixA.txt matrixB.txt CMakeLists.txt Singularity.def build/

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build

      - name: Set execute permissions for test executable
        run: chmod +x build/test_multiplication

      - name: Run Test Cases
        run: sudo ctest -VV
        working-directory: build

      - name: Install Singularity
        run: |
          wget https://github.com/sylabs/singularity/releases/download/v4.1.3/singularity-ce_4.1.3-focal_amd64.deb
          sudo apt-get install -y libfuse2 fuse2fs
          sudo dpkg -i singularity-ce_4.1.3-focal_amd64.deb
          sudo apt-get install -f

      - name: Build Singularity Image
        run: sudo singularity build matrix_multiplication.sif build/Singularity.def

      - name: List files for verification
        run: ls -l

      - name: Run MPI in Singularity
        run: singularity exec matrix_multiplication.sif mpirun -np 2 /usr/src/matrix_multiplication/main

      - name: Ensure SSH known_hosts file exists
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts

      - name: Remove old host key
        run: |
          ssh-keygen -R ${{ secrets.REMOTE_HOST }} || true

      - name: Add new host key
        run: |
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: List known hosts for verification
        run: cat ~/.ssh/known_hosts

      - name: Transfer code
        env:
          SSH_HOST: ${{ secrets.REMOTE_HOST }}
          SSH_USER: ${{ secrets.REMOTE_USER }}
          SSH_PASS: ${{ secrets.REMOTE_PASSWORD }}
        run: |
          ssh-keygen -R $SSH_HOST || true
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
          sshpass -p "$SSH_PASS" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null matrix_multiplication.sif matrixA.txt matrixB.txt $SSH_USER@$SSH_HOST